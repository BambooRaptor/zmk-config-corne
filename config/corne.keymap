/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        default-enter {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
        };
    };

    macros {
        mac_snip: mac_snip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(LC(NUMBER_4)))>;
            label = "MAC_SNIP";
        };

        mac_screen_ss: mac_screen_ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(NUMBER_3))>;
            label = "MAC_SCREEN_SS";
        };

        mac_copy: mac_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "MAC_COPY";
        };

        mac_paste: mac_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "MAC_PASTE";
        };

        mac_terminal: mac_terminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp T &kp E &kp R &kp M &kp I &kp N &kp A &kp L &kp ENTER>;
            label = "MAC_TERMINAL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE          &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O         &kp P          &kp C_VOLUME_UP
&kp LEFT_CONTROL    &kp A  &kp S  &kp D      &kp F  &kp G        &kp H      &kp J  &kp K      &kp L         &kp BACKSPACE  &kp LEFT_ALT
&kp K_CONTEXT_MENU  &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N      &kp M  &kp TAB    &kp LEFT_WIN  &kp ENTER      &kp C_VOLUME_DOWN
                                  &kp LSHFT  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp RSHFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&mac_snip       &kp GRAVE     &kp BSLH  &kp LS(QMARK)  &kp SQT    &kp LS(DQT)    &kp LS(LPAR)    &kp LS(RPAR)  &kp N7  &kp N8  &kp N9  &mac_terminal
&kp LCTRL       &kp LS(PIPE)  &kp FSLH  &kp SEMI       &kp COMMA  &kp DOT        &kp MINUS       &kp EQUAL     &kp N4  &kp N5  &kp N6  &kp LEFT_ALT
&mac_screen_ss  &kp LGUI      &kp TAB   &kp LS(COLON)  &kp LBKT   &kp RBKT       &kp LS(LT)      &kp LS(GT)    &kp N1  &kp N2  &kp N3  &none
                                        &none          &mo 1      &none          &kp LEFT_SHIFT  &mo 2         &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none      &kp F1  &kp F2   &kp F3        &kp F4   &mac_copy         &kp INSERT  &kp BACKSPACE  &kp UP    &kp DELETE    &none    &kp C_BRIGHTNESS_INC
&kp LCTRL  &kp F5  &kp F6   &kp F7        &kp F8   &none             &kp PG_UP   &kp LEFT       &kp DOWN  &kp RIGHT     &kp RET  &kp LEFT_ALT
&none      &kp F9  &kp F10  &kp F11       &kp F12  &mac_paste        &kp PG_DN   &kp HOME       &kp TAB   &kp LEFT_WIN  &kp END  &kp C_BRIGHTNESS_DEC
                            &kp LEFT_ALT  &mo 1    &kp LEFT_SHIFT    &none       &mo 2          &none
            >;
        };

        raise_and_lower {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &out OUT_USB    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &kp N0  &mo 4           &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &out OUT_BLE    &bt BT_CLR    &trans        &trans        &trans        &trans        &trans
                        &trans  &mo 1   &trans          &trans        &mo 2         &trans
            >;
        };

        bt_discc {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp NUMBER_1   &trans         &trans         &trans         &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &trans         &trans         &trans         &trans         &trans
                        &trans  &trans  &trans    &trans         &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        raise_and_lower {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
